{"version":3,"file":"static/js/432.c01db9e2.chunk.js","mappings":"sPAOe,SAASA,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IACXE,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJR,EAAUQ,EACX,IACAC,OAAM,SAAAR,GACLC,EAAS,kCACTQ,QAAQC,IAAIV,EACb,IACAW,SAAQ,kBAAMR,GAAW,EAAjB,GAGd,GAAE,KAGD,+BACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAaS,KAAM,mBAClBV,GAAW,cACXF,IAAS,yBAAMA,IACfF,IAAU,SAAC,IAAD,CAAWA,OAAQA,QAIrC,C,4ECnCYe,EAAY,SAAC,GAA8B,IAA5Bf,EAA2B,EAA3BA,OAAQgB,EAAmB,EAAnBA,aAClC,OACE,+BACE,wBACGhB,EAAOiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMN,GAA1C,UACE,wBAAKG,OAFAD,EADC,OAUnB,C,sDChBD,MAAwB,2B,SCCjB,SAASK,EAAT,GAAgC,IAATT,EAAQ,EAARA,KAC5B,OAAO,eAAIU,UAAWC,EAAf,SAA2BX,GACnC,C,+LCFKY,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHrB,EAAS,mCAAG,yGAAOsB,EAAP,+BAAc,EAAd,SACLF,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACkBF,EADlB,iBACkCG,EADlC,wCADK,cACjBC,EADiB,yBAIhBA,EAAIC,KAAKtB,SAJO,2CAAH,qDAOTuB,EAAY,mCAAG,WAAOC,GAAP,4FAAcJ,EAAd,+BAAqB,EAArB,SACRF,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACqBF,EADrB,iBACqCG,EADrC,kBACmDI,EADnD,wCADQ,cACpBH,EADoB,yBAInBA,EAAIC,KAAKtB,SAJU,2CAAH,sDAOZyB,EAAkB,mCAAG,WAAMhB,GAAN,uFACdS,EAAAA,EAAAA,IAAA,UACbC,EADa,YACcV,EADd,oBAC4BQ,EAD5B,oBADc,cAC1BI,EAD0B,yBAIzBA,EAAIC,MAJqB,2CAAH,sDAOlBI,EAAkB,mCAAG,WAAMjB,GAAN,uFACdS,EAAAA,EAAAA,IAAA,iBACNT,GADM,OACDU,EADC,oBACkCF,EADlC,oBADc,cAC1BI,EAD0B,yBAIzBA,EAAIC,KAAKK,MAJgB,2CAAH,sDAOlBC,EAAkB,mCAAG,WAAOnB,GAAP,4FAAWW,EAAX,+BAAkB,EAAlB,SACdF,EAAAA,EAAAA,IAAA,iBACNT,GADM,OACDU,EADC,oBACkCF,EADlC,gCACiEG,IAFnD,cAC1BC,EAD0B,yBAIzBA,EAAIC,KAAKtB,SAJgB,2CAAH,qD","sources":["components/HomePage/HomePage.js","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/components/Pageheading/PageHeading.module.css?fc51","components/Pageheading/Pageheading.js","services/movies-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { getMovies } from 'services/movies-api';\nimport { Container } from 'components/Container/Container';\nimport { PageHeading } from 'components/Pageheading/Pageheading';\nimport { MovieList } from 'components/MoviesList/MoviesList';\n\nexport default function GetTrendingMovies() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchTrendingMovies = () => {\n      setLoading(true);\n      getMovies()\n        .then(results => {\n          setMovies(results);\n        })\n        .catch(error => {\n          setError('Ooops. Something went wrong...');\n          console.log(error);\n        })\n        .finally(() => setLoading(false));\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <PageHeading text={'Trending Today'}></PageHeading>\n        {loading && 'Loading ...'}\n        {error && <div>{error}</div>}\n        {movies && <MovieList movies={movies} />}\n      </Container>\n    </>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies, prevLocation }) => {\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n              <h3>{original_title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  //prevLocation: PropTypes.object.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__whdE-\"};","import css from './PageHeading.module.css';\n\nexport function PageHeading({ text }) {\n  return <h1 className={css.title}>{text}</h1>;\n}\n","import axios from 'axios';\n\nconst API_KEY = '91f9ab18c89e86fca0699a0f3031794a';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return res.data.results;\n};\n"],"names":["GetTrendingMovies","useState","movies","setMovies","error","setError","loading","setLoading","useEffect","getMovies","then","results","catch","console","log","finally","text","MovieList","prevLocation","map","id","original_title","to","state","from","PageHeading","className","css","API_KEY","axios","END_POINTS","page","res","data","fetchByQuery","query","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}